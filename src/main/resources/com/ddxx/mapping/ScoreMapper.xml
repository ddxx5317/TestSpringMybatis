<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ddxx.dao.ScoreMapper" >
  <resultMap id="BaseResultMap" type="com.ddxx.model.Score" >
    <id column="sno" property="sno" jdbcType="INTEGER" />
    <id column="cno" property="cno" jdbcType="INTEGER" />
    <result column="score" property="score" jdbcType="INTEGER" />
  </resultMap>
  
  <sql id="Base_Column_List" >
    sno, cno, score
  </sql>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="com.ddxx.model.ScoreKey" >
    select 
    <include refid="Base_Column_List" />
    from t_score
    where sno = #{sno,jdbcType=INTEGER}
      and cno = #{cno,jdbcType=INTEGER}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="com.ddxx.model.ScoreKey" >
    delete from t_score
    where sno = #{sno,jdbcType=INTEGER}
      and cno = #{cno,jdbcType=INTEGER}
  </delete>
  
  <insert id="insert" parameterType="com.ddxx.model.Score" >
    insert into t_score (sno, cno, score
      )
    values (#{sno,jdbcType=INTEGER}, #{cno,jdbcType=INTEGER}, #{score,jdbcType=INTEGER}
      )
  </insert>
  
  <insert id="insertSelective" parameterType="com.ddxx.model.Score" >
    insert into t_score
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="sno != null" >
        sno,
      </if>
      <if test="cno != null" >
        cno,
      </if>
      <if test="score != null" >
        score,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="sno != null" >
        #{sno,jdbcType=INTEGER},
      </if>
      <if test="cno != null" >
        #{cno,jdbcType=INTEGER},
      </if>
      <if test="score != null" >
        #{score,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  
  <update id="updateByPrimaryKeySelective" parameterType="com.ddxx.model.Score" >
    update t_score
    <set >
      <if test="score != null" >
        score = #{score,jdbcType=INTEGER},
      </if>
    </set>
    where sno = #{sno,jdbcType=INTEGER}
      and cno = #{cno,jdbcType=INTEGER}
  </update>
  
  <update id="updateByPrimaryKey" parameterType="com.ddxx.model.Score" >
    update t_score
    set score = #{score,jdbcType=INTEGER}
    where sno = #{sno,jdbcType=INTEGER}
      and cno = #{cno,jdbcType=INTEGER}
  </update>
  
  <resultMap id="scoreResultMap" type="com.ddxx.model.Score" extends="BaseResultMap" >
    <collection property="students" javaType="list" ofType="com.ddxx.model.Student">
      <id property="sno" column="sno"/>
      <result property="sname" column="sname"/>
    </collection>
  </resultMap>
  
  <select id="getScoreList" resultMap="scoreResultMap">
	SELECT
		t1.sno,
		t1.sname,
		t2.cno,
		t2.score
	FROM
		t_student t1
	LEFT JOIN t_score t2 ON t1.sno = t2.sno
	GROUP BY
		t1.sno,
		t1.sname
  </select>
</mapper>